{"version":3,"file":"index.jsx","sourceRoot":"","sources":["index.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACjC,OAAO,OAAO,MAAM,WAAW,CAAC;AAChC,OAAO,MAAM,MAAM,UAAU,CAAC;AAC9B,kEAAkE;AAClE,OAAO,EAAgB,mBAAmB,EAAsB,MAAM,2BAA2B,CAAC;AAClG,OAAO,EAAE,wBAAwB,EAAE,MAAM,iBAAiB,CAAC;AAE3D,IAAM,UAAU,GAAE;IAChB,IAAM,OAAO,GAAG,wBAAwB,EAAE,CAAC;IACrC,IAAA,KAAsB,QAAQ,CAAC,KAAK,CAAC,EAApC,MAAM,QAAA,EAAE,SAAS,QAAmB,CAAC;IAC5C,IAAM,MAAM,GAAG;QACb,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,IAAM,cAAc,GAAoB;QACtC,IAAI;QACJ,mBAAmB;QACnB,oBAAoB;QACpB,8BAA8B;QAC9B,wDAAwD;QACxD,KAAK;QACL,IAAI;QACJ,qBAAqB;QACrB,sBAAsB;QACtB,wBAAwB;QACxB,0DAA0D;QAC1D,KAAK;QACL,IAAI;QACJ,uBAAuB;QACvB,wBAAwB;QACxB,+BAA+B;QAC/B,4DAA4D;QAC5D,KAAK;QACL;YACE,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE,mBAAmB;YACzB,OAAO,EAAE,WAAI,OAAO,CAAE,KAAK,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;SACrD;QACD;YACE,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,aAAa;YACnB,IAAI,EAAE,mBAAmB;YACzB,OAAO,EAAE,WAAI,OAAO,CAAE,KAAK,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;SACxD;QACD;YACE,IAAI,EAAE,oBAAoB;YAC1B,IAAI,EAAE,uBAAuB;YAC7B,IAAI,EAAE,mBAAmB;YACzB,OAAO,EAAE,WAAI,OAAO,CAAE,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;SACtE;KACF,CAAC;IAEF,OAAO,CACL,EACE;MAAA,CAAC,kOAAkO,CACnO;MAAA,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE,MAAO,CAAC,CAAC,MAAM,CAAC,CAAE,MAAO,CAAC,CAAC,cAAc,CAAC,CAAE,cAAgB,CAAC,EAC/E;MAAA,CAAC,MAAM,CAAC,MAAM,CAAC,CAAE,MAAO,CAAC,EAC3B;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AACF,eAAe,UAAU,CAAC","sourcesContent":["\"use client\";\nimport { useState } from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport Navbar from \"./Navbar\";\n// import { UserIcon, Bars3Icon } from \"@heroicons/react/24/solid\"\nimport { EnvelopeIcon, CubeTransparentIcon, IdentificationIcon } from \"@heroicons/react/20/solid\"; \nimport { useSelectedLayoutSegment } from \"next/navigation\";\n\nconst Navigation= () => {\n  const segment = useSelectedLayoutSegment();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const sidebarOptions: SidebarOption[] = [\n    // {\n    //   name: \"About\",\n    //   href: \"/about\",\n    //   icon: IdentificationIcon,\n    //   current: `/${segment}` === \"/about\" ? true : false,\n    // },\n    // {\n    //   name: \"Contact\",\n    //   href: \"/contact\",\n    //   icon: EnvelopeIcon,\n    //   current: `/${segment}` === \"/contact\" ? true : false,\n    // },\n    // {\n    //   name: \"Portfolio\",\n    //   href: \"/portfolio\",\n    //   icon: CubeTransparentIcon,\n    //   current: `/${segment}` === \"/portfolio\" ? true : false,\n    // },\n    {\n      name: \"3D Demo\",\n      href: \"/3D_Demo\",\n      icon: CubeTransparentIcon,\n      current: `/${segment}` === \"/3D_Demo\" ? true : false,\n    },\n    {\n      name: \"TEST ROUTE\",\n      href: \"/test_route\",\n      icon: CubeTransparentIcon,\n      current: `/${segment}` === \"/test_route\" ? true : false,\n    },\n    {\n      name: \"DYNAMIC_TEST ROUTE\",\n      href: \"/test_route_dynamic/4\",\n      icon: CubeTransparentIcon,\n      current: `/${segment}`.includes('/test_route_dynamic') ? true : false,\n    },\n  ];\n\n  return (\n    <>\n      {/* NOTE - This is a hacky fix I came up with to make the sidebar sticky and still use flex-grow to grow the main content on the screen. Now my main content can remain as server components while still being properly sized ðŸŽ‰ */}\n      <Sidebar isOpen={ isOpen } toggle={ toggle } sidebarOptions={ sidebarOptions  } />\n      <Navbar toggle={ toggle } />\n    </>\n  );\n};\nexport default Navigation;"]}