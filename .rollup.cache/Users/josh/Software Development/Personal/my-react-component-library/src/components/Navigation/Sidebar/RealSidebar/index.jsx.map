{"version":3,"file":"index.jsx","sourceRoot":"","sources":["index.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,OAAO,IAAI,MAAM,WAAW,CAAC;AAK7B,OAAO,IAAI,MAAM,YAAY,CAAC;AAC9B,OAAO,MAAM,MAAM,uBAAuB,CAAC;AAC3C,iDAAiD;AAEjD,IAAM,WAAW,GAAG,UAAC,EAQpB;QAPC,MAAM,YAAA,EACN,MAAM,YAAA,EACN,cAAc,oBAAA;IAMd,SAAS,UAAU;QAAC,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QACtC,OAAO,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;IACD,OAAO,CACL,EACE;MAAA,CAAC,4MAA4M,CAC7M;MAAA,CAAC,GAAG,CACF,SAAS,CAAC,CAAE,UAAU,CAAC,MAAM,CAAC,gBAAgB,EAAE,kDAAkD,CAAC,CAAC,CAEtG;MAAA,CAAC,8DAA8D,CAC7D;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,CAAE,UAAU,CAAE,uDAAuD,CAAE,CAAC,CACvF;QAAA,CAAC,iGAAiG,CAChG;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,iCAAiC,CAC9C;YAAA,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAE,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAG,CAAC,CAC7E;cAAA,CAAC,IAAI,CAAC,AAAD,EACP;YAAA,EAAE,IAAI,CACN;YAAA,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACZ;cAAA,CAAC,EAAE,CAAC,SAAS,CAAC,0CAA0C,CAAC,UAAU,EAAE,EAAE,CACzE;YAAA,EAAE,IAAI,CACR;UAAA,EAAE,GAAG,CACL;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,sBAAsB,CACnC;YAAA,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,8BAA8B,CACtD;cAAA,CAAC,EAAE,CACD;gBAAA,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CACzC;kBAAA,CAAE,cAAc,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,CAC/B,CAAC,EAAE,CAAC,GAAG,CAAC,CAAE,MAAM,CAAC,IAAK,CAAC,CACrB;sBAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAE,MAAM,CAAC,IAAK,CAAC,CAAC,SAAS,CAAC,CAAE,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,kDAAkD,EAAE,mFAAmF,CAAE,CAAC,CACtO;wBAAA,CAAC,sFAAuF,CACxF;wBAAA,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,uDAAuD,EAC9E;wBAAA,CAAE,MAAM,CAAC,IAAK,CAChB;sBAAA,EAAE,IAAI,CACR;oBAAA,EAAE,EAAE,CAAC,CAEN,EATgC,CAShC,CAAE,CACL;gBAAA,EAAE,EAAE,CACN;cAAA,EAAE,EAAE,CACN;YAAA,EAAE,EAAE,CACJ;YAAA,CAAC,0DAA2D,CAC5D;YAAA,CAAC,qEAAsE,CACzE;UAAA,EAAE,GAAG,CACP;QAAA,EAAE,GAAG,CACP;MAAA,EAAE,GAAG,CACP;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AACF,eAAe,WAAW,CAAC","sourcesContent":["\"use client\";\nimport Link from \"next/link\";\n// import { EnvelopeIcon } from \"@heroicons/react\";\n// import { UserIcon, Bars3Icon } from \"@heroicons/react/24/solid\"\nimport { EnvelopeIcon, CubeTransparentIcon, IdentificationIcon } from \"@heroicons/react/20/solid\";\nimport { useSelectedLayoutSegment } from \"next/navigation\";\nimport Logo from \"../../Logo\";\nimport styles from \"../styles.module.scss\";\n// import { classNames } from \"@/src/app/_utils\";\n\nconst RealSidebar = ({\n  isOpen,\n  toggle,\n  sidebarOptions,\n}: {\n  isOpen: boolean;\n  toggle: () => void;\n  sidebarOptions: SidebarOption[];\n}) => {\n  function classNames(...classes: string[]) {\n    return classes.filter(Boolean).join(\" \");\n  }\n  return (\n    <>\n      {/* NOTE - When the window has a width of 640px or less (like on mobile devices), only the hidden class is applied. On larger screen sizes, flex overrides the hidden class and makes the sidebar visible. */}\n      <div \n        className={ classNames(styles.sidebarContainer, \"hidden sm:h-screen sm:flex sm:w-fit sm:inset-y-0\")}\n      >\n      {/* <div className=\"h-screen lg:flex lg:w-fit lg:inset-y-0\"> */}\n        <div className={ classNames( \"flex grow flex-col gapy-y-5 overflow-y-auto px-6 pb-4\") }>\n        {/* <div className=\"flex grow flex-col gapy-y-5 overflow-y-auto bg-white px-6 pb-4 border-r-2\"> */}\n          <div className=\"flex h-16 shrink-0 items-center\">\n            <Link href=\"/\" className=\"p-3\" style={ { height: '100%', aspectRatio: '1/1' } }>\n              <Logo />\n            </Link>\n            <Link href=\"/\">\n              <h1 className=\"text-black font-medium whitespace-nowrap\">Josh Arnow</h1>\n            </Link>\n          </div>\n          <nav className=\"flex flex-1 flex-col\">\n            <ul role=\"list\" className=\"flex flex-1 flex-col gap-y-7\">\n              <li>\n                <ul role=\"list\" className=\"-mx-2 space-y-1\">\n                  { sidebarOptions.map((option) => (\n                    <li key={ option.name }>\n                      <Link href={ option.href } className={ classNames(option.current ? \"bg-gray-700 text-white\" : \"text-gray-400 hover:text-white hover:bg-gray-700\", \"group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-medium whitespace-nowrap\") }>\n                        {/*  NOTE - Classes after the comma will be applied regardless of outcome of ternary */ }\n                        <option.icon className=\"text-gray-300 group-hover:text-white h-6 w-6 shrink-0\" />\n                        { option.name }\n                      </Link>\n                    </li>\n\n                  )) }\n                </ul>\n              </li>\n            </ul>\n            {/* TODO - Add date and time to the bottom of the navbar */ }\n            {/* TODO - Switch to Apple font (San Francisco?) & apply as default */ }\n          </nav>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default RealSidebar;"]}