{"version":3,"file":"Logo.jsx","sourceRoot":"","sources":["Logo.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,OAAO,KAAK,MAAM,YAAY,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE5C,iCAAiC;AACjC,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAC7C,OAAO,aAAa,MAAM,yCAAyC,CAAC;AACpE,OAAO,sBAAsB,MAAM,oDAAoD,CAAC;AAExF,IAAM,IAAI,GAAG;IACX,iEAAiE;IAC3D,IAAA,KAAoB,QAAQ,CAAC,CAAC,CAAC,EAA9B,KAAK,QAAA,EAAE,QAAQ,QAAe,CAAC;IAEtC,IAAM,WAAW,GAAG;QAClB,IAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC;QACnC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,SAAS,CAAC;QACR,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QAC/C,WAAW,EAAE,CAAC;IAChB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,+DAA+D;IACzD,IAAA,KAA8B,QAAQ,CAAC,KAAK,CAAC,EAA5C,UAAU,QAAA,EAAE,aAAa,QAAmB,CAAC;IAEpD,IAAM,eAAe,GAAG;QACtB,IAAI,MAAM,CAAC,OAAO,IAAI,GAAG,IAAI,MAAM,CAAC,UAAU,GAAG,GAAG,EAAE,CAAC;YACrD,aAAa,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC;aAAM,CAAC;YACN,aAAa,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC;IACH,CAAC,CAAC;IAEF,SAAS,CAAC;QACR,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;IACrD,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACL,EACE;MAAA,CAAC,0EAA0E,CACzE;QAAA,CAAC,MAAM,CACL;UAAA,CAAE,UAAC,EAAY;gBAAV,QAAQ,cAAA;YACX,OAAO,CAAC,KAAK,CACX,GAAG,CAAC,CAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,sBAAsB,CAAC,CACzD,GAAG,CAAC,MAAM,CACV,OAAO,CAAC,CAAE,GAAI,CAAC,EACf,CAAA;QACJ,CAAE,CACJ;QAAA,EAAE,MAAM,CACV;MAAA,CAAC,aAAa,CACd;MAAA,CAAC,GAAG,CACF,KAAK,CAAC,CAAE;YACN,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM;SACtC,CAAC,CAEH;QAAA,CAAC,gBAAgB,CACnB;MAAA,EAAE,GAAG,CACP;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,IAAI,CAAC","sourcesContent":["\"use client\";\nimport Image from \"next/image\";\nimport { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\n// import Button from \"./Button\";\nimport Device from \"@/src/components/Device\";\nimport joshArnowLogo from \"@/src/assets/images/josh_arnow_logo.svg\";\nimport joshArnowLogoNoShadows from \"@/src/assets/images/josh_arnow_logo_no_shadows.svg\";\n\nconst Logo = () => {\n  //update the size of the logo when the size of the screen changes\n  const [width, setWidth] = useState(0);\n\n  const updateWidth = () => {\n    const newWidth = window.innerWidth;\n    setWidth(newWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n    updateWidth();\n  }, []);\n\n  // change between the logo and the button when the user scrolls\n  const [showButton, setShowButton] = useState(false);\n\n  const changeNavButton = () => {\n    if (window.scrollY >= 400 && window.innerWidth < 768) {\n      setShowButton(true);\n    } else {\n      setShowButton(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeNavButton);\n  }, []);\n\n  return (\n    <>\n      {/* <Link href=\"/\" style={ { display: showButton ? \"none\" : \"block\" } }> */}\n        <Device>\n          { ({ isSafari }) => {\n            return <Image\n              src={ !isSafari ? joshArnowLogo : joshArnowLogoNoShadows}\n              alt=\"Logo\"\n              quality={ 100 }\n            />\n          } }\n        </Device>\n      {/* </Link> */}\n      <div\n        style={ {\n          display: showButton ? \"block\" : \"none\",\n        } }\n      >\n        {/* <Button /> */}\n      </div>\n    </>\n  );\n};\n\nexport default Logo;"]}