"use strict";
import{__exports as t}from"../../../../../../../_virtual/sorted-routes.js";!function(t){Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"getSortedRoutes",{enumerable:!0,get:function(){return s}});class e{insert(t){this._insert(t.split("/").filter(Boolean),[],!1)}smoosh(){return this._smoosh()}_smoosh(t){void 0===t&&(t="/");const e=[...this.children.keys()].sort();null!==this.slugName&&e.splice(e.indexOf("[]"),1),null!==this.restSlugName&&e.splice(e.indexOf("[...]"),1),null!==this.optionalRestSlugName&&e.splice(e.indexOf("[[...]]"),1);const s=e.map((e=>this.children.get(e)._smoosh(""+t+e+"/"))).reduce(((t,e)=>[...t,...e]),[]);if(null!==this.slugName&&s.push(...this.children.get("[]")._smoosh(t+"["+this.slugName+"]/")),!this.placeholder){const e="/"===t?"/":t.slice(0,-1);if(null!=this.optionalRestSlugName)throw new Error('You cannot define a route with the same specificity as a optional catch-all route ("'+e+'" and "'+e+"[[..."+this.optionalRestSlugName+']]").');s.unshift(e)}return null!==this.restSlugName&&s.push(...this.children.get("[...]")._smoosh(t+"[..."+this.restSlugName+"]/")),null!==this.optionalRestSlugName&&s.push(...this.children.get("[[...]]")._smoosh(t+"[[..."+this.optionalRestSlugName+"]]/")),s}_insert(t,s,i){if(0===t.length)return void(this.placeholder=!1);if(i)throw new Error("Catch-all must be the last part of the URL.");let n=t[0];if(n.startsWith("[")&&n.endsWith("]")){let r=n.slice(1,-1),o=!1;if(r.startsWith("[")&&r.endsWith("]")&&(r=r.slice(1,-1),o=!0),r.startsWith("...")&&(r=r.substring(3),i=!0),r.startsWith("[")||r.endsWith("]"))throw new Error("Segment names may not start or end with extra brackets ('"+r+"').");if(r.startsWith("."))throw new Error("Segment names may not start with erroneous periods ('"+r+"').");function l(t,e){if(null!==t&&t!==e)throw new Error("You cannot use different slug names for the same dynamic path ('"+t+"' !== '"+e+"').");s.forEach((t=>{if(t===e)throw new Error('You cannot have the same slug name "'+e+'" repeat within a single dynamic path');if(t.replace(/\W/g,"")===n.replace(/\W/g,""))throw new Error('You cannot have the slug names "'+t+'" and "'+e+'" differ only by non-word symbols within a single dynamic path')})),s.push(e)}if(i)if(o){if(null!=this.restSlugName)throw new Error('You cannot use both an required and optional catch-all route at the same level ("[...'+this.restSlugName+']" and "'+t[0]+'" ).');l(this.optionalRestSlugName,r),this.optionalRestSlugName=r,n="[[...]]"}else{if(null!=this.optionalRestSlugName)throw new Error('You cannot use both an optional and required catch-all route at the same level ("[[...'+this.optionalRestSlugName+']]" and "'+t[0]+'").');l(this.restSlugName,r),this.restSlugName=r,n="[...]"}else{if(o)throw new Error('Optional route parameters are not yet supported ("'+t[0]+'").');l(this.slugName,r),this.slugName=r,n="[]"}}this.children.has(n)||this.children.set(n,new e),this.children.get(n)._insert(t.slice(1),s,i)}constructor(){this.placeholder=!0,this.children=new Map,this.slugName=null,this.restSlugName=null,this.optionalRestSlugName=null}}function s(t){const s=new e;return t.forEach((t=>s.insert(t))),s.smoosh()}}(t);
//# sourceMappingURL=sorted-routes.js.map
