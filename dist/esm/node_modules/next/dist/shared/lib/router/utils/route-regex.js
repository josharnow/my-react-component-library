"use strict";
import{r as e}from"../../../../../../../_virtual/route-regex.js";import"../../../../server/future/helpers/interception-routes.js";import"../../escape-regexp.js";import"./remove-trailing-slash.js";import{__exports as t}from"../../../../../../../_virtual/escape-regexp.js";import{__exports as r}from"../../../../../../../_virtual/remove-trailing-slash.js";import{i as n}from"../../../../../../../_virtual/interception-routes.js";!function(e,o){Object.defineProperty(o,"__esModule",{value:!0}),function(e,t){for(var r in t)Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}(o,{getNamedMiddlewareRegex:function(){return d},getNamedRouteRegex:function(){return R},getRouteRegex:function(){return g}});const i=n.exports,s=t,a=r,u="nxtP",p="nxtI";function c(e){const t=e.startsWith("[")&&e.endsWith("]");t&&(e=e.slice(1,-1));const r=e.startsWith("...");return r&&(e=e.slice(3)),{key:e,repeat:r,optional:t}}function l(e){const t=(0,a.removeTrailingSlash)(e).slice(1).split("/"),r={};let n=1;return{parameterizedRoute:t.map((e=>{const t=i.INTERCEPTION_ROUTE_MARKERS.find((t=>e.startsWith(t))),o=e.match(/\[((?:\[.*\])|.+)\]/);if(t&&o){const{key:e,optional:i,repeat:a}=c(o[1]);return r[e]={pos:n++,repeat:a,optional:i},"/"+(0,s.escapeStringRegexp)(t)+"([^/]+?)"}if(o){const{key:e,repeat:t,optional:i}=c(o[1]);return r[e]={pos:n++,repeat:t,optional:i},t?i?"(?:/(.+?))?":"/(.+?)":"/([^/]+?)"}return"/"+(0,s.escapeStringRegexp)(e)})).join(""),groups:r}}function g(e){const{parameterizedRoute:t,groups:r}=l(e);return{re:new RegExp("^"+t+"(?:/)?$"),groups:r}}function m(e){let{interceptionMarker:t,getSafeRouteKey:r,segment:n,routeKeys:o,keyPrefix:i}=e;const{key:a,optional:u,repeat:p}=c(n);let l=a.replace(/\W/g,"");i&&(l=""+i+l);let g=!1;(0===l.length||l.length>30)&&(g=!0),isNaN(parseInt(l.slice(0,1)))||(g=!0),g&&(l=r()),o[l]=i?""+i+a:a;const m=t?(0,s.escapeStringRegexp)(t):"";return p?u?"(?:/"+m+"(?<"+l+">.+?))?":"/"+m+"(?<"+l+">.+?)":"/"+m+"(?<"+l+">[^/]+?)"}function f(e,t){const r=(0,a.removeTrailingSlash)(e).slice(1).split("/"),n=function(){let e=0;return()=>{let t="",r=++e;for(;r>0;)t+=String.fromCharCode(97+(r-1)%26),r=Math.floor((r-1)/26);return t}}(),o={};return{namedParameterizedRoute:r.map((e=>{const r=i.INTERCEPTION_ROUTE_MARKERS.some((t=>e.startsWith(t))),a=e.match(/\[((?:\[.*\])|.+)\]/);if(r&&a){const[r]=e.split(a[0]);return m({getSafeRouteKey:n,interceptionMarker:r,segment:a[1],routeKeys:o,keyPrefix:t?p:void 0})}return a?m({getSafeRouteKey:n,segment:a[1],routeKeys:o,keyPrefix:t?u:void 0}):"/"+(0,s.escapeStringRegexp)(e)})).join(""),routeKeys:o}}function R(e,t){const r=f(e,t);return{...g(e),namedRegex:"^"+r.namedParameterizedRoute+"(?:/)?$",routeKeys:r.routeKeys}}function d(e,t){const{parameterizedRoute:r}=l(e),{catchAll:n=!0}=t;if("/"===r){return{namedRegex:"^/"+(n?".*":"")+"$"}}const{namedParameterizedRoute:o}=f(e,!1);return{namedRegex:"^"+o+(n?"(?:(/.*)?)":"")+"$"}}}(0,e.exports);
//# sourceMappingURL=route-regex.js.map
