"use strict";
import{i as t}from"../../../../../../_virtual/interception-routes.js";import"../../../shared/lib/router/utils/app-paths.js";import{a as e}from"../../../../../../_virtual/app-paths.js";!function(t,r){Object.defineProperty(r,"__esModule",{value:!0}),function(t,e){for(var r in e)Object.defineProperty(t,r,{enumerable:!0,get:e[r]})}(r,{INTERCEPTION_ROUTE_MARKERS:function(){return o},extractInterceptionRouteInformation:function(){return a},isInterceptionRouteAppPath:function(){return i}});const n=e.exports,o=["(..)(..)","(.)","(..)","(...)"];function i(t){return void 0!==t.split("/").find((t=>o.find((e=>t.startsWith(e)))))}function a(t){let e,r,i;for(const n of t.split("/"))if(r=o.find((t=>n.startsWith(t))),r){[e,i]=t.split(r,2);break}if(!e||!r||!i)throw new Error(`Invalid interception route: ${t}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`);switch(e=(0,n.normalizeAppPath)(e),r){case"(.)":i="/"===e?`/${i}`:e+"/"+i;break;case"(..)":if("/"===e)throw new Error(`Invalid interception route: ${t}. Cannot use (..) marker at the root level, use (.) instead.`);i=e.split("/").slice(0,-1).concat(i).join("/");break;case"(...)":i="/"+i;break;case"(..)(..)":const r=e.split("/");if(r.length<=2)throw new Error(`Invalid interception route: ${t}. Cannot use (..)(..) marker at the root level or one level up.`);i=r.slice(0,-2).concat(i).join("/");break;default:throw new Error("Invariant: unexpected marker")}return{interceptingRoute:e,interceptedRoute:i}}}(0,t.exports);
//# sourceMappingURL=interception-routes.js.map
