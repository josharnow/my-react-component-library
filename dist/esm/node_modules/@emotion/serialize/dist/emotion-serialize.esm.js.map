{"version":3,"file":"emotion-serialize.esm.js","sources":["../../../../../../node_modules/@emotion/serialize/dist/emotion-serialize.esm.js"],"sourcesContent":["import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\\(|(no-)?(open|close)-quote/;\n  var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        throw new Error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar noComponentSelectorMessage = 'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.';\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error(noComponentSelectorMessage);\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n  return cached !== undefined ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error(noComponentSelectorMessage);\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*(;|$)/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n"],"names":["ILLEGAL_ESCAPE_SEQUENCE_ERROR","UNDEFINED_AS_OBJECT_KEY_ERROR","hyphenateRegex","animationRegex","isCustomProperty","property","charCodeAt","isProcessableValue","value","processStyleName","memoize","styleName","replace","toLowerCase","processStyleValue","key","match","p1","p2","cursor","name","styles","next","unitless","process","env","NODE_ENV","contentValuePattern","contentValues","oldProcessStyleValue","msPattern","hyphenPattern","hyphenatedCache","indexOf","test","charAt","length","Error","processed","undefined","console","error","str","_char","toUpperCase","noComponentSelectorMessage","handleInterpolation","mergedProps","registered","interpolation","__emotion_styles","toString","anim","map","obj","string","Array","isArray","i","_key","interpolated","_i","createStringFromObject","previousCursor","result","matched","replaced","fakeVarName","push","concat","join","cached","sourceMapPattern","labelPattern","serializeStyles","args","stringMode","sourceMap","strings","raw","lastIndex","identifierName","exec","hashString"],"mappings":"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"}