import e from"../../hash/dist/emotion-hash.esm.js";import n from"../../unitless/dist/emotion-unitless.esm.js";import o from"../../memoize/dist/emotion-memoize.esm.js";var t="You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences",r="You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).",s=/[A-Z]|^ms/g,i=/_EMO_([^_]+?)_([^]*?)_EMO_/g,a=function(e){return 45===e.charCodeAt(1)},c=function(e){return null!=e&&"boolean"!=typeof e},l=o((function(e){return a(e)?e:e.replace(s,"-$&").toLowerCase()})),u=function(e,o){switch(e){case"animation":case"animationName":if("string"==typeof o)return o.replace(i,(function(e,n,o){return N={name:n,styles:o,next:N},n}))}return 1===n[e]||a(e)||"number"!=typeof o||0===o?o:o+"px"};if("production"!==process.env.NODE_ENV){var p=/(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\(|(no-)?(open|close)-quote/,d=["normal","none","initial","inherit","unset"],f=u,m=/^-ms-/,v=/-(.)/g,h={};u=function(e,n){if("content"===e&&("string"!=typeof n||-1===d.indexOf(n)&&!p.test(n)&&(n.charAt(0)!==n.charAt(n.length-1)||'"'!==n.charAt(0)&&"'"!==n.charAt(0))))throw new Error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\""+n+"\"'`");var o=f(e,n);return""===o||a(e)||-1===e.indexOf("-")||void 0!==h[e]||(h[e]=!0,console.error("Using kebab-case for css properties in objects is not supported. Did you mean "+e.replace(m,"ms-").replace(v,(function(e,n){return n.toUpperCase()}))+"?")),o}}var y="Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";function g(e,n,o){if(null==o)return"";if(void 0!==o.__emotion_styles){if("production"!==process.env.NODE_ENV&&"NO_COMPONENT_SELECTOR"===o.toString())throw new Error(y);return o}switch(typeof o){case"boolean":return"";case"object":if(1===o.anim)return N={name:o.name,styles:o.styles,next:N},o.name;if(void 0!==o.styles){var t=o.next;if(void 0!==t)for(;void 0!==t;)N={name:t.name,styles:t.styles,next:N},t=t.next;var s=o.styles+";";return"production"!==process.env.NODE_ENV&&void 0!==o.map&&(s+=o.map),s}return function(e,n,o){var t="";if(Array.isArray(o))for(var s=0;s<o.length;s++)t+=g(e,n,o[s])+";";else for(var i in o){var a=o[i];if("object"!=typeof a)null!=n&&void 0!==n[a]?t+=i+"{"+n[a]+"}":c(a)&&(t+=l(i)+":"+u(i,a)+";");else{if("NO_COMPONENT_SELECTOR"===i&&"production"!==process.env.NODE_ENV)throw new Error(y);if(!Array.isArray(a)||"string"!=typeof a[0]||null!=n&&void 0!==n[a[0]]){var p=g(e,n,a);switch(i){case"animation":case"animationName":t+=l(i)+":"+p+";";break;default:"production"!==process.env.NODE_ENV&&"undefined"===i&&console.error(r),t+=i+"{"+p+"}"}}else for(var d=0;d<a.length;d++)c(a[d])&&(t+=l(i)+":"+u(i,a[d])+";")}}return t}(e,n,o);case"function":if(void 0!==e){var a=N,p=o(e);return N=a,g(e,n,p)}"production"!==process.env.NODE_ENV&&console.error("Functions that are interpolated in css calls will be stringified.\nIf you want to have a css call based on props, create a function that returns a css call like this\nlet dynamicStyle = (props) => css`color: ${props.color}`\nIt can be called directly with props or interpolated in a styled call like this\nlet SomeComponent = styled('div')`${dynamicStyle}`");break;case"string":if("production"!==process.env.NODE_ENV){var d=[],f=o.replace(i,(function(e,n,o){var t="animation"+d.length;return d.push("const "+t+" = keyframes`"+o.replace(/^@keyframes animation-\w+/,"")+"`"),"${"+t+"}"}));d.length&&console.error("`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\nInstead of doing this:\n\n"+[].concat(d,["`"+f+"`"]).join("\n")+"\n\nYou should wrap it with `css` like this:\n\ncss`"+f+"`")}}if(null==n)return o;var m=n[o];return void 0!==m?m:o}var E,N,_=/label:\s*([^\s;\n{]+)\s*(;|$)/g;"production"!==process.env.NODE_ENV&&(E=/\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g);var b=function(n,o,r){if(1===n.length&&"object"==typeof n[0]&&null!==n[0]&&void 0!==n[0].styles)return n[0];var s=!0,i="";N=void 0;var a,c=n[0];null==c||void 0===c.raw?(s=!1,i+=g(r,o,c)):("production"!==process.env.NODE_ENV&&void 0===c[0]&&console.error(t),i+=c[0]);for(var l=1;l<n.length;l++)i+=g(r,o,n[l]),s&&("production"!==process.env.NODE_ENV&&void 0===c[l]&&console.error(t),i+=c[l]);"production"!==process.env.NODE_ENV&&(i=i.replace(E,(function(e){return a=e,""}))),_.lastIndex=0;for(var u,p="";null!==(u=_.exec(i));)p+="-"+u[1];var d=e(i)+p;return"production"!==process.env.NODE_ENV?{name:d,styles:i,map:a,next:N,toString:function(){return"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."}}:{name:d,styles:i,next:N}};export{b as serializeStyles};
//# sourceMappingURL=emotion-serialize.esm.js.map
