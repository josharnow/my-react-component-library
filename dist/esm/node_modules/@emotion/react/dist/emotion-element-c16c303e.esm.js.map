{"version":3,"file":"emotion-element-c16c303e.esm.js","sources":["../../../../../../node_modules/@emotion/react/dist/emotion-element-c16c303e.esm.js"],"sourcesContent":["import * as React from 'react';\nimport { useContext, forwardRef } from 'react';\nimport createCache from '@emotion/cache';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport weakMemoize from '@emotion/weak-memoize';\nimport hoistNonReactStatics from '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar isBrowser = typeof document !== 'undefined';\nvar hasOwn = {}.hasOwnProperty;\n\nvar EmotionCacheContext = /* #__PURE__ */React.createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? /* #__PURE__ */createCache({\n  key: 'css'\n}) : null);\n\nif (process.env.NODE_ENV !== 'production') {\n  EmotionCacheContext.displayName = 'EmotionCacheContext';\n}\n\nvar CacheProvider = EmotionCacheContext.Provider;\nvar __unsafe_useEmotionCache = function useEmotionCache() {\n  return useContext(EmotionCacheContext);\n};\n\nvar withEmotionCache = function withEmotionCache(func) {\n  // $FlowFixMe\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    // the cache will never be null in the browser\n    var cache = useContext(EmotionCacheContext);\n    return func(props, cache, ref);\n  });\n};\n\nif (!isBrowser) {\n  withEmotionCache = function withEmotionCache(func) {\n    return function (props) {\n      var cache = useContext(EmotionCacheContext);\n\n      if (cache === null) {\n        // yes, we're potentially creating this on every render\n        // it doesn't actually matter though since it's only on the server\n        // so there will only every be a single render\n        // that could change in the future because of suspense and etc. but for now,\n        // this works and i don't want to optimise for a future thing that we aren't sure about\n        cache = createCache({\n          key: 'css'\n        });\n        return /*#__PURE__*/React.createElement(EmotionCacheContext.Provider, {\n          value: cache\n        }, func(props, cache));\n      } else {\n        return func(props, cache);\n      }\n    };\n  };\n}\n\nvar ThemeContext = /* #__PURE__ */React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'EmotionThemeContext';\n}\n\nvar useTheme = function useTheme() {\n  return React.useContext(ThemeContext);\n};\n\nvar getTheme = function getTheme(outerTheme, theme) {\n  if (typeof theme === 'function') {\n    var mergedTheme = theme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production' && (mergedTheme == null || typeof mergedTheme !== 'object' || Array.isArray(mergedTheme))) {\n      throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');\n    }\n\n    return mergedTheme;\n  }\n\n  if (process.env.NODE_ENV !== 'production' && (theme == null || typeof theme !== 'object' || Array.isArray(theme))) {\n    throw new Error('[ThemeProvider] Please make your theme prop a plain object');\n  }\n\n  return _extends({}, outerTheme, theme);\n};\n\nvar createCacheWithTheme = /* #__PURE__ */weakMemoize(function (outerTheme) {\n  return weakMemoize(function (theme) {\n    return getTheme(outerTheme, theme);\n  });\n});\nvar ThemeProvider = function ThemeProvider(props) {\n  var theme = React.useContext(ThemeContext);\n\n  if (props.theme !== theme) {\n    theme = createCacheWithTheme(theme)(props.theme);\n  }\n\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, props.children);\n};\nfunction withTheme(Component) {\n  var componentName = Component.displayName || Component.name || 'Component';\n\n  var render = function render(props, ref) {\n    var theme = React.useContext(ThemeContext);\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      theme: theme,\n      ref: ref\n    }, props));\n  }; // $FlowFixMe\n\n\n  var WithTheme = /*#__PURE__*/React.forwardRef(render);\n  WithTheme.displayName = \"WithTheme(\" + componentName + \")\";\n  return hoistNonReactStatics(WithTheme, Component);\n}\n\nvar getLastPart = function getLastPart(functionName) {\n  // The match may be something like 'Object.createEmotionProps' or\n  // 'Loader.prototype.render'\n  var parts = functionName.split('.');\n  return parts[parts.length - 1];\n};\n\nvar getFunctionNameFromStackTraceLine = function getFunctionNameFromStackTraceLine(line) {\n  // V8\n  var match = /^\\s+at\\s+([A-Za-z0-9$.]+)\\s/.exec(line);\n  if (match) return getLastPart(match[1]); // Safari / Firefox\n\n  match = /^([A-Za-z0-9$.]+)@/.exec(line);\n  if (match) return getLastPart(match[1]);\n  return undefined;\n};\n\nvar internalReactFunctionNames = /* #__PURE__ */new Set(['renderWithHooks', 'processChild', 'finishClassComponent', 'renderToString']); // These identifiers come from error stacks, so they have to be valid JS\n// identifiers, thus we only need to replace what is a valid character for JS,\n// but not for CSS.\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar getLabelFromStackTrace = function getLabelFromStackTrace(stackTrace) {\n  if (!stackTrace) return undefined;\n  var lines = stackTrace.split('\\n');\n\n  for (var i = 0; i < lines.length; i++) {\n    var functionName = getFunctionNameFromStackTraceLine(lines[i]); // The first line of V8 stack traces is just \"Error\"\n\n    if (!functionName) continue; // If we reach one of these, we have gone too far and should quit\n\n    if (internalReactFunctionNames.has(functionName)) break; // The component name is the first function in the stack that starts with an\n    // uppercase letter\n\n    if (/^[A-Z]/.test(functionName)) return sanitizeIdentifier(functionName);\n  }\n\n  return undefined;\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/react' like this: css`\" + props.css + \"`\");\n  }\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwn.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // For performance, only call getLabelFromStackTrace in development and when\n  // the label hasn't already been computed\n\n  if (process.env.NODE_ENV !== 'production' && !!props.css && (typeof props.css !== 'object' || typeof props.css.name !== 'string' || props.css.name.indexOf('-') === -1)) {\n    var label = getLabelFromStackTrace(new Error().stack);\n    if (label) newProps[labelPropName] = label;\n  }\n\n  return newProps;\n};\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  if (!isBrowser && rules !== undefined) {\n    var _ref2;\n\n    var serializedNames = serialized.name;\n    var next = serialized.next;\n\n    while (next !== undefined) {\n      serializedNames += ' ' + next.name;\n      next = next.next;\n    }\n\n    return /*#__PURE__*/React.createElement(\"style\", (_ref2 = {}, _ref2[\"data-emotion\"] = cache.key + \" \" + serializedNames, _ref2.dangerouslySetInnerHTML = {\n      __html: rules\n    }, _ref2.nonce = cache.sheet.nonce, _ref2));\n  }\n\n  return null;\n};\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var WrappedComponent = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles, undefined, React.useContext(ThemeContext));\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwn.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serialized: serialized,\n    isStringTag: typeof WrappedComponent === 'string'\n  }), /*#__PURE__*/React.createElement(WrappedComponent, newProps));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\n\nvar Emotion$1 = Emotion;\n\nexport { CacheProvider as C, Emotion$1 as E, ThemeContext as T, __unsafe_useEmotionCache as _, ThemeProvider as a, withTheme as b, createEmotionProps as c, hasOwn as h, isBrowser as i, useTheme as u, withEmotionCache as w };\n"],"names":["isBrowser","document","hasOwn","hasOwnProperty","EmotionCacheContext","React.createContext","exports","createContext","HTMLElement","createCache","key","process","env","NODE_ENV","displayName","Provider","withEmotionCache","func","forwardRef","props","ref","cache","useContext","React.createElement","createElement","value","ThemeContext","getLastPart","functionName","parts","split","length","internalReactFunctionNames","Set","typePropName","labelPropName","createEmotionProps","type","css","indexOf","Error","newProps","call","name","label","stackTrace","line","match","lines","i","exec","has","test","replace","getLabelFromStackTrace","stack","Insertion","_ref","serialized","isStringTag","registerStyles","rules","useInsertionEffectAlwaysWithSyncFallback","insertStyles","undefined","_ref2","serializedNames","next","dangerouslySetInnerHTML","__html","nonce","sheet","Emotion","cssProp","registered","WrappedComponent","registeredStyles","className","getRegisteredStyles","serializeStyles","React.useContext","labelFromStack","React.Fragment","Fragment","Emotion$1"],"mappings":"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"}