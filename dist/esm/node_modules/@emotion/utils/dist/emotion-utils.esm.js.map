{"version":3,"file":"emotion-utils.esm.js","sources":["../../../../../../node_modules/@emotion/utils/dist/emotion-utils.esm.js"],"sourcesContent":["var isBrowser = typeof document !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var stylesForSSR = '';\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      if (!isBrowser && maybeStyles !== undefined) {\n        stylesForSSR += maybeStyles;\n      }\n\n      current = current.next;\n    } while (current !== undefined);\n\n    if (!isBrowser && stylesForSSR.length !== 0) {\n      return stylesForSSR;\n    }\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n"],"names":["isBrowser","document","getRegisteredStyles","registered","registeredStyles","classNames","rawClassName","split","forEach","className","undefined","push","registerStyles","cache","serialized","isStringTag","key","name","compat","styles","insertStyles","inserted","stylesForSSR","current","maybeStyles","insert","sheet","next","length"],"mappings":"AAAA,IAAIA,EAAgC,oBAAbC,SACvB,SAASC,EAAoBC,EAAYC,EAAkBC,GACzD,IAAIC,EAAe,GAQnB,OAPAD,EAAWE,MAAM,KAAKC,SAAQ,SAAUC,QACRC,IAA1BP,EAAWM,GACbL,EAAiBO,KAAKR,EAAWM,GAAa,KAE9CH,GAAgBG,EAAY,GAElC,IACSH,CACT,CACG,IAACM,EAAiB,SAAwBC,EAAOC,EAAYC,GAC9D,IAAIN,EAAYI,EAAMG,IAAM,IAAMF,EAAWG,OAO5B,IAAhBF,IAIa,IAAdf,QAAwCU,IAAjBG,EAAMK,cAAyDR,IAAhCG,EAAMV,WAAWM,KACrEI,EAAMV,WAAWM,GAAaK,EAAWK,OAE7C,EACIC,EAAe,SAAsBP,EAAOC,EAAYC,GAC1DH,EAAeC,EAAOC,EAAYC,GAClC,IAAIN,EAAYI,EAAMG,IAAM,IAAMF,EAAWG,KAE7C,QAAwCP,IAApCG,EAAMQ,SAASP,EAAWG,MAAqB,CACjD,IAAIK,EAAe,GACfC,EAAUT,EAEd,EAAG,CACD,IAAIU,EAAcX,EAAMY,OAAOX,IAAeS,EAAU,IAAMd,EAAY,GAAIc,EAASV,EAAMa,OAAO,GAE/F1B,QAA6BU,IAAhBc,IAChBF,GAAgBE,GAGlBD,EAAUA,EAAQI,IACxB,YAAyBjB,IAAZa,GAET,IAAKvB,GAAqC,IAAxBsB,EAAaM,OAC7B,OAAON,CAEV,CACH"}